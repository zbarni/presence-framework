<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "SIP_Servlets_Server_User_Guide.ent">
%BOOK_ENTITIES;
]>
<!-- chapter id nickname: bsssc -->

<section id="bsssc-binary-SIP_Servlets_Server-Configuring">
<title> Sip Connectors </title>
 
<para>
&PLATFORM_NAME; comes with default settings that are designed to get your system up and running without the need to know about all the detailed configurations. That said, there are situations in which you might like to fine-tune your setttings to adapt it to your needs. That is what the following section will help you achieve. You will get a better understand of SIP connectors and how to make them work for you.
</para>

  <para>&nbsp;</para>

  <section id="bsssc-binary-SIP_Servlets_Server-Adding_SIP_Connectors">

   <title>Configuring SIP Connectors and Bindings</title>

<para>

There are two important configuration files that you might need to modifying depending on your system needs. The standalone-sip.xml file in &SHORT_PLATFORM_NAME; for JBoss AS7 and the server.xml file in &SHORT_PLATFORM_NAME; for Tomcat. The extracts below will give you a snapshot of default configurations.
</para>

<!--
    <para>SIP Connectors are added by adding a <emphasis>&lt;Connector&gt;</emphasis> element under the <emphasis>&lt;Service&gt;</emphasis> element in the container's <filename>standalone-sip.xml</filename> configuration file.</para>
    <para>Three SIP Connectors are configured for SIP Servlets:</para>
    <itemizedlist>
      <listitem>
        <para>
        UDP and TCP are running on the binding IP Address of the container and port 5080.
        </para>
      </listitem>
      <listitem>
        <para>
        TLS is running on the binding IP Address of the container and port 5081.
        </para>
      </listitem>
    </itemizedlist>

-->
<formalpara>
<title> For JBoss</title>
</formalpara>

<para>
Changing the ports and other configuration for the SIP connector can be done in the standalone-sip.xml file. Below is an extract.
</para>

    <example>
      <title>Adding a SIP Connector to $JBOSS_HOME/standalone/configuration/standalone-sip.xml</title>

<!-- 
     <para>
      To add a SIP Connector on the IP address <literal>127.0.0.1</literal>, on port <literal>5080</literal>, using the UDP transport protocol, you should insert the following XML element:
      </para>
-->



      <programlisting linenumbering="unnumbered" role="XML"><![CDATA[

 <socket-binding-group name="standard-sockets" default-interface="public" port-offset="${jboss.socket.binding.port-offset:0}">
        <socket-binding name="management-native" interface="management" port="${jboss.management.native.port:9999}"/>
        <socket-binding name="management-http" interface="management" port="${jboss.management.http.port:9990}"/>
        <socket-binding name="management-https" interface="management" port="${jboss.management.https.port:9443}"/>
        <socket-binding name="ajp" port="8009"/>
        <socket-binding name="http" port="8080"/>
        <socket-binding name="https" port="8443"/>
        <socket-binding name="sip-udp" port="5080"/>
        <socket-binding name="sip-tcp" port="5080"/>
        <socket-binding name="sip-tls" port="5081"/>
        <socket-binding name="osgi-http" interface="management" port="8090"/>
        <socket-binding name="remoting" port="4447"/>
        <socket-binding name="txn-recovery-environment" port="4712"/>
        <socket-binding name="txn-status-manager" port="4713"/>
        <outbound-socket-binding name="mail-smtp">
            <remote-destination host="localhost" port="25"/>
        </outbound-socket-binding>
    </socket-binding-group>

]]></programlisting>
    
</example>


<formalpara>
<title> For Tomcat</title>
</formalpara>

<para>
Changing the ports and other configuration for the SIP connector can be done in the server.xml file. Below is an extract.
</para>

    <example>
      <title>Adding a SIP Connector to $CATALINA_HOME/conf/server.xml</title>

      <programlisting linenumbering="unnumbered" role="XML"><![CDATA[
  <Connector port="5080" 
ipAddress="127.0.0.1"
 protocol="org.mobicents.servlet.sip.startup.SipProtocolHandler"
 signalingTransport="udp"
 useStun="false"
 stunServerAddress="stun01.sipphone.com"
 stunServerPort="3478"
 staticServerAddress="122.122.122.122" 
 staticServerPort="44"
 useStaticAddress="true"
 httpFollowsSip="false"/>]]></programlisting>

    </example>


    <variablelist>
      <title>SIP &lt;connector&gt; Attributes</title>
      <varlistentry>
        <term>port</term>
        <listitem>
          <para>The port number on which the container will be able to receive SIP messages.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>ipAddress</term>
        <listitem>
          <para>The IP address at which the container will be able to receive SIP messages. The container can be configured to listen to all available IP addresses by setting <parameter>ipAddress</parameter> to <userinput>0.0.0.0 &lt;sipPathName&gt;</userinput>.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>protocol</term>
        <listitem>
          <para>Specifies the connector is a SIP Connector and not an HTTP Connector. There is no need to change this property.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>signalingTransport</term>
        <listitem>
          <para>Specifies the transport on which the container will be able to receive SIP messages. For example, &quot;udp&quot;.</para>
        </listitem>
      </varlistentry>      
      <varlistentry>
        <term>useStun</term>
        <listitem>
          <para>Enables Session Traversal Utilities for NAT (STUN) support for this Connector. The attribute defaults to &quot;false&quot;. If set to &quot;true&quot;, ensure that the <literal>ipAddress</literal> attribute is <emphasis>not</emphasis> set to <literal>127.0.0.1</literal>. Refer to <xref linkend="mssstun-&SHORT_PLATFORM_NAME;_STUN"/> for more information about STUN.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>stunServerAddress</term>
        <listitem>
          <para>Specifies the STUN server address used to discover the public IP address of the SIP Connector. This attribute is only required if the <literal>useStun</literal> attribute is set to &quot;true&quot;. Refer to <xref linkend="mssstun-&SHORT_PLATFORM_NAME;_STUN"/> for more information about STUN and public STUN servers.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>stunServerPort</term>
        <listitem>
          <para>Specifies the STUN server port of the STUN server used in the <literal>stunServerAddress</literal> attribute. You should rarely need to change this attribute; also, it is only needed if the <literal>useStun</literal> attribute is set to &quot;true&quot;. Refer to <xref linkend="mssstun-&SHORT_PLATFORM_NAME;_STUN"/> for more information about STUN.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>useStaticAddress</term>
        <listitem>
          <para>Specifies whether the settings in staticServerAddress and staticServerPort are activated. The default value is &quot;false&quot; (deactivated).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>staticServerAddress</term>
        <listitem>
          <para>Specifies what load-balancer server address is inserted in Contact/Via headers for server-created requests. This parameter  is useful for  cluster configurations where  requests should  be bound to a load-balancer address, rather than  a specific node address.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>staticServerPort</term>
        <listitem>
          <para>Specifies the port of the load-balancer specified in staticServerAddress. This parameter is useful in cluster configurations where requests should be bound to a load-balancer address rather than a specific node address.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>httpFollowsSip</term>
        <listitem>
          <para>
          Makes the application server aware of how the SIP Load Balancers assign request affinity, and stores this information in the application session.
          </para>
          <para>
          When the HTTP Load Balancer sends HTTP requests that are not associated with the application session, the application server will force the HTTP request to be repeated until it lands on the correct node.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <note>
      <para>A comprehensive list of implementing classes for the SIP Stack is available from the <ulink url="http://ci.jboss.org/jenkins/job/jain-sip/lastSuccessfulBuild/artifact/javadoc/javax/sip/SipStack.html">Class SipStackImpl page on nist.gov</ulink>.</para>
    </note>
  </section>
  <section id="bsssc-binary-SIP_Servlets_Server-Configuring_Application_Routing">
    <title>Application Routing and Service Configuration</title>
    <para>The application router is called by the container to select a SIP Servlet application to service an initial request. It embodies the logic used to choose which applications to invoke. An application router is required for a container to function, but it is a separate logical entity from the container.</para>
    <para>The application router is responsible for application selection and must not implement application logic. For example, the application router cannot modify a request or send a response.</para>
    <para>For more information about the application router, refer to the following sections of the <ulink url="http://jcp.org/en/jsr/detail?id=289">JSR 289 specification</ulink>: Application Router Packaging and Deployment, Application Selection Process, and Appendix C.
   </para>

<note>

<title> </title>

<para>
See the example chapters for more information about the Application Router Configuration for SIP &SHORT_PLATFORM_NAME; for JBoss AS7
</para>
<para>
 <xref linkend="sfss-Services_for_SIP_Servlets"/> 
</para>

</note>



    <para>In order to configure the application router for Tomcat, you should edit the <literal>Service</literal> element in the container's <filename>server.xml</filename> configuration file</para>


    <example id="bsssc-Configuring_the_Service_Element_in_the_Containers_server.xml">
      <title>Configuring the Service Element in the Container&apos;s server.xml</title>
      <programlisting linenumbering="unnumbered" role="XML"><![CDATA[
  <Service name="Sip-Servlets"
 className="org.mobicents.servlet.sip.startup.SipStandardService"
 sipApplicationDispatcherClassName="org.mobicents.servlet.sip.core.SipApplicationDispatcherImpl"
 usePrettyEncoding="false" 
 additionalParameterableHeaders="Header1,Header2" 
 bypassResponseExecutor="false" 
 bypassRequestExecutor="false" 
 baseTimerInterval="500"
 t2Interval="4000"
 t4Interval="5000"
 timerDInterval="32000"
 dispatcherThreadPoolSize="4"
 darConfigurationFileLocation="file:///home/user/workspaces/sip-servlets/
 sip-servlets-examples/reinvite-demo/reinvite-dar.properties"
 sipStackPropertiesFile="conf/mss-sip-stack.properties"
 dialogPendingRequestChecking="false"
 canceledTimerTasksPurgePeriod="1">]]>
 </programlisting>
    </example>

<para>For &SHORT_PLATFORM_NAME; for JBoss AS7 this is located in standalone-sip.xml file :</para>

<example id="bsssc-Configuring_the_mobicents_subsystem_in_the_Containers_standalone-sip.xml">
      <title>Configuring the Mobicents SubSystem Element in the Container&apos;s standalone.xml</title>
      <programlisting linenumbering="unnumbered" role="XML"><![CDATA[
  <subsystem xmlns="urn:org.mobicents:sip-servlets-as7:1.0" application-router="dars/mobicents-dar.properties" stack-properties="mss-sip-stack.properties" path-name="gov.nist" app-dispatcher-class="org.mobicents.servlet.sip.core.SipApplicationDispatcherImpl" concurrency-control-mode="SipApplicationSession" congestion-control-interval="-1">
            <connector name="sip-udp" protocol="SIP/2.0" scheme="sip" socket-binding="sip-udp"/>
            <connector name="sip-tcp" protocol="SIP/2.0" scheme="sip" socket-binding="sip-tcp"/>
            <connector name="sip-tls" protocol="SIP/2.0" scheme="sip" socket-binding="sip-tls"/>
        </subsystem>]]>
 </programlisting>
    </example>

    <variablelist>
      <title>SIP Service element attributes</title>
      <varlistentry>
        <term>className</term>
        <listitem>
          <para>This attribute specifies that the servlet container is a <emphasis>converged</emphasis> (i.e. SIP + HTTP) servlet container.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>sipApplicationDispatcherClassName</term>
        <listitem>
          <para>This attribute specifies the class name of the <literal>org.mobicents.servlet.sip.core.SipApplicationDispatcher</literal> implementation to use. The routing algorithm and application selection process is performed in that class.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>darConfigurationFileLocation</term>
        <listitem>
          <para>The default application router file location. This is used by the default application router to determine the application selection logic. Refer to Appendix C of the JSR 289 specification for more details.</para>
        </listitem>
      </varlistentry>
       <varlistentry>
        <term>sipStackPropertiesFile</term>
        <listitem>
          <para>Specifies the location of the file containing key value pairs corresponding to the SIP Stack configuration properties. This attribute is used to further tune the JAIN SIP Stack. If this property is omitted, the following default values are assumed:</para>
          <itemizedlist>
            <listitem>
              <para>gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true</para>
            </listitem>
            <listitem>
              <para>gov.nist.javax.sip.TRACE_LEVEL=32</para>
            </listitem>
            <listitem>
              <para>gov.nist.javax.sip.DEBUG_LOG=logs/mss-jsip-debuglog.txt</para>
            </listitem>
            <listitem>
              <para>gov.nist.javax.sip.SERVER_LOG=logs/mss-jsip-messages.xml</para>
            </listitem>
            <listitem>
              <para>javax.sip.STACK_NAME=&PLATFORM_NAME;-SIP-Servlets</para>
            </listitem>
            <listitem>
              <para>javax.sip.AUTOMATIC_DIALOG_SUPPORT=off</para>
            </listitem>
            <listitem>
              <para>gov.nist.javax.sip.DELIVER_UNSOLICITED_NOTIFY=true</para>
            </listitem>
            <listitem>
              <para>gov.nist.javax.sip.THREAD_POOL_SIZE=64</para>
            </listitem>
            <listitem>
              <para>gov.nist.javax.sip.REENTRANT_LISTENER=true</para>
            </listitem>
            <listitem>
              <para>gov.nist.javax.sip.MAX_FORK_TIME_SECONDS=0. Dialog forking is not enabled by default as it has an impact on memory. If set to a value greater than 0, Dialog Forking will be enabled on &PLATFORM_NAME; Sip Servlets.</para>
            </listitem>
            <listitem>
              <para>gov.nist.javax.sip.AUTOMATIC_DIALOG_ERROR_HANDLING=false. Merged requests Loop Detection is turned off by default</para>
            </listitem>            
          </itemizedlist>
          <para>SIP Servlets also adds its own properties to allow for even more configuration and flexibility:</para>
          <itemizedlist>
            <listitem>
              <para>If the property <literal>org.mobicents.servlet.sip.SERVER_HEADER</literal> is set, a server header will be added to all SIP Responses leaving the container.</para>
            </listitem>
            <listitem>
              <para>If the property <literal>org.mobicents.servlet.sip.USER_AGENT_HEADER</literal> is set, a server header will be added to all SIP Requests leaving the container.</para>
            </listitem>                            
           </itemizedlist>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>usePrettyEncoding</term>
        <listitem>
          <para>Allows Via, Route, and RecordRoute header field information to be split into multiple lines, rather than each header field being separating with a comma. The attribute defaults to &quot;true&quot;. Leaving this attribute at the default setting may assist in debugging non-RFC3261 compliant SIP servers.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>additionalParameterableHeaders</term>
        <listitem>
          <para>Comma separated list of header names that are treated as parameterable by the container. The specified headers are classed as valid, in addition to the standard parameterable headers defined in the Sip Servlets 1.1 Specification.</para>
          <para>Setting and getting parameters is allowed for both the standard and the additional parameters. Parameters that are not specified in <literal>additionalParameterableHeaders</literal> will result in a ServletParseException error.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>bypassRequestExecutor/bypassResponseExecutor</term>
        <listitem>
          <para>If set to false, the SIP Servlets server uses a ThreadPoolExecutor linked to a LinkedBlockingQueue to dispatch the request/response threads. The container can then handle two different responses (for example a 180 Ringing and a 200 OK) concurrently. However, a race condition can occur where the second response overtakes the first one (200 OK dispatched to the application before the 180 Ringing) on UDP.</para>
          <para>These flags are set to true by defauilt, Jain sip serializing is used per transaction to ensure such race conditions don't occur in &PLATFORM_NAME; Sip Servlets even though they can still happen on UDP at jain sip level.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>baseTimerInterval</term>
        <listitem>
          <para>Specifies the <literal>T1</literal> Base Timer Interval, which allows the SIP Servlets container to adjust its timers depending on network conditions. The default interval is 500 (milliseconds).</para>
          <para>For more information about available timers, refer to the <ulink url="http://tools.ietf.org/html/rfc3261#appendix-A">RFC326 &quot;Table of Timer Values&quot;1</ulink>, and the document contained in the <ulink url="http://www.3gpp.org/ftp/Specs/html-info/24229.htm">3GPP-IMS TS 24.229 v9.1.0 specification ZIP archive</ulink>.</para>
                  <para>All of the timers present in the tables depend on <literal>T1</literal>, <literal>T2</literal>, <literal>T4</literal>, and <literal>Timer D</literal>.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>t2Interval</term>
        <listitem>
          <para>Specifies the <literal>T2</literal> Interval, which allows the SIP Servlets container to adjust its timers depending on network conditions. The default interval is 4000 (milliseconds).</para>
          <para>For more information about available timers, refer to the <ulink url="http://tools.ietf.org/html/rfc3261#appendix-A">RFC326 &quot;Table of Timer Values&quot;1</ulink>, and the document contained in the <ulink url="http://www.3gpp.org/ftp/Specs/html-info/24229.htm">3GPP-IMS TS 24.229 v9.1.0 specification ZIP archive</ulink>.</para>
          <para>All of the timers present in the tables depend on <literal>T1</literal>, <literal>T2</literal>, <literal>T4</literal>, and <literal>Timer D</literal>.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>t4Interval</term>
        <listitem>
          <para>Specifies the <literal>T4</literal> Interval, which allows the SIP Servlets container to adjust its timers depending on network conditions. The default interval is 5000 (milliseconds).</para>
          <para>For more information about available timers, refer to the <ulink url="http://tools.ietf.org/html/rfc3261#appendix-A">RFC326 &quot;Table of Timer Values&quot;1</ulink>, and the document contained in the <ulink url="http://www.3gpp.org/ftp/Specs/html-info/24229.htm">3GPP-IMS TS 24.229 v9.1.0 specification ZIP archive</ulink>.</para>
          <para>All of the timers present in the tables depend on <literal>T1</literal>, <literal>T2</literal>, <literal>T4</literal>, and <literal>Timer D</literal>.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>timerDInterval</term>
        <listitem>
          <para>Specifies the <literal>Timer D</literal> Interval, which allows the SIP Servlets container to adjust its timers depending on network conditions. The default interval is 32000 (milliseconds).</para>
          <para>For more information about available timers, refer to the <ulink url="http://tools.ietf.org/html/rfc3261#appendix-A">RFC326 &quot;Table of Timer Values&quot;1</ulink>, and the document contained in the <ulink url="http://www.3gpp.org/ftp/Specs/html-info/24229.htm">3GPP-IMS TS 24.229 v9.1.0 specification ZIP archive</ulink>.</para>
          <para>All of the timers present in the tables depend on <literal>T1</literal>, <literal>T2</literal>, <literal>T4</literal>, and <literal>Timer D</literal>.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>dispatcherThreadPoolSize</term>
        <listitem>
          <para>The number of threads used for processing SIP messages inside the Sip Servlets container by the dispatcher. The default value is 4.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>dialogPendingRequestChecking</term>
        <listitem>
          <para>This property enables and disables error checking when SIP transactions overlap. If within a single dialog an INVITE request arrives while there is antoher transaction proceeding, the container will send a 491 error response. The default value is false.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>dnsServerLocatorClass</term>
        <listitem>
          <para>Specifies the <classname>org.mobicents.ext.javax.sip.dns.DNSServerLocator</classname> implementation class that will be used by the container to perform DNS lookups compliant with RFC 3263 : Locating SIP Servers and E.164 NUmber Mapping. The default class used by the container is <classname>org.mobicents.ext.javax.sip.dns.DefaultDNSServerLocator</classname>, but any class implementing the <classname>org.mobicents.ext.javax.sip.dns.DNSServerLocator</classname> interface. To disable DNS lookups, this attribute should be left empty.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>addressResolverClass</term>
        <listitem>
          <para>Specifies the <classname>gov.nist.core.net.AddressResolver</classname> implementation class that will be used by the container to perform DNS lookups. The default class used by the container is <classname>org.mobicents.servlet.sip.core.DNSAddressResolver</classname>, but any class implementing the <classname>gov.nist.core.net.AddressResolver</classname> NIST SIP Stack interface and having a constructor with a <classname>org.mobicents.servlet.sip.core.SipApplicationDispatcher</classname> parameter can be used. To disable DNS lookups, this attribute should be left empty.</para>
          <para>This attribute has been deprecated in favor of <literal>dnsServerLocatorClass</literal> attribute which provides better compliance with RFC 3263 : Location SIP Servers and ENUM support</para>
        </listitem>
      </varlistentry> 
      <varlistentry>
        <term>canceledTimerTasksPurgePeriod</term>
        <listitem>
          <para>Defines a period to due a purge in the container timer schedulers. The purge may prevent excessive memory usage for apps that cancel most of the timers it sets.</para>
        </listitem>
      </varlistentry>       
    </variablelist>
  </section>


  <section id="bsssc-binary-SIP_Servlets_Server-Configuring_Logging">
    <title>SIP Servlets Server Logging</title>
 
<para>
Logging is an important part of working with &PLATFORM_NAME;. There are a few files that you need to be familiar with in order to successfully troubleshoot and adapt &SHORT_PLATFORM_NAME; server monitoring and logging to your environment.
</para>

<formalpara>
<title>Logging Files for &SHORT_PLATFORM_NAME; for JBoss AS7</title>
</formalpara>

<para>
$JBOSS/standalone/configuration/logging.properties
</para>
<para>
$JBOSS/standalone/configuration/mss-sip-stack.properties
</para>

<para>
$JBOSS/standalone/configuration/standalone-sip.xml
</para>

<example id="standalone-sip.xml-logging-configuration">
<title>
Setting the log file name in $JBOSS/standalone/configuration/standalone-sip.xml
</title>

<programlisting linenumbering="unnumbered" role="XML">
<![CDATA[

 </formatter>
<file relative-to="jboss.server.log.dir" path="server.log"/>
<suffix value=".yyyy-MM-dd"/>
<append value="true"/>

]]>
</programlisting>

</example>

<para>

The configuration above produces SIP logs that can be found in the  $JBOSS_HOME/standalone/log directory. Below is an extract of the log files.

</para>

<screen>
                       server.log.2012-08-14  server.log.2012-08-24
server.log             server.log.2012-08-16  server.log.2012-08-25
server.log.2012-08-07  server.log.2012-08-21  server.log.2012-08-26
server.log.2012-08-13  server.log.2012-08-22
</screen>


<formalpara>
<title>Logging Files for &SHORT_PLATFORM_NAME; for Tomcat </title>
</formalpara>

<para>
If you are working with Tomcat, the log configuration files are located in the $CATALINA_HOME/conf/ directory. The log4j configuration file is located in $CATALINA_HOME/lib/ directory
</para>


<para>
$CATALINA_HOME/conf/logging.properties
</para>
<para>
$CATALINA_HOME/conf/mss-sip-stack.properties
</para>

<para>
$CATALINA_HOME/conf/server.xml
</para>

<para>
$CATALINA_HOME/lib/log4j.xml
</para>

<formalpara>
<title>Truncated Sample Configuration from Server.xml  </title>
</formalpara>

<example id="server.xml-logging-configuration">
<title>
Setting the log file name $CATALINA_HOME/conf/server.xml
</title>

<programlisting linenumbering="unnumbered" role="XML">
<![CDATA[


<Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"  
               prefix="localhost_access_log." suffix=".txt"
               pattern="%h %l %u %t &quot;%r&quot; %s %b" resolveHosts="false"/>


]]>
</programlisting>

</example>


<formalpara>
<title>Truncated Sample Configuration from log4j.xml  </title>
</formalpara>

<example id="log4j.xml-logging-configuration">
<title>
Configuring the log file name $CATALINA_HOME/lib/log4j.xml
</title>

<programlisting linenumbering="unnumbered" role="XML">
<![CDATA[
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
  <appender name="rolling-file" class="org.apache.log4j.RollingFileAppender"> 
    <param name="file" value="${catalina.home}/logs/sip-server.log"/>
    <param name="MaxFileSize" value="1000KB"/>

]]>
</programlisting>

</example>

<para>
The result of the extracted configuration above that is taken from the log4j.xml file  and can be found in the $CATALINA_HOME/logs directory. 
</para>

<formalpara>JAIN-SIP Stack Logging</formalpara>
   <para>There are two separate levels of logging:</para>
    <itemizedlist>
      <listitem>
        <para>Logging at the container level, which can be configured using the <filename>log4j.xml</filename> or <filename>standalone-sip.xml</filename> configuration file seen above</para>
      </listitem>
      <listitem>
        <para>Logging of the JAIN SIP stack, which is configured through the container logging and the SIP stack properties themselves</para>
      </listitem>
    </itemizedlist>
    <para>You can setup the logging so that the JAIN SIP Stack will log into the container logs.</para>
        <para>To use LOG4J in JAIN SIP Stack in Tomcat, you need to define a category in <filename>CATALINE_HOME/lib/jboss-log4j.xml</filename> and set it to <literal>DEBUG</literal>.</para>
        <example id="bsssc-Configuring_the_Stack_Logs_in_the_Container_log4j.xml">
                <title>Configuring the JAIN SIP Stack to log into the Tomcat Container&apos;s logs</title>
                <programlisting linenumbering="unnumbered" role="XML"><![CDATA[
                        <category name="gov.nist">
                        <priority value="DEBUG"/>
                        </category>]]>
                </programlisting>
        </example>
        <para>To use LOG4J in JAIN SIP Stack in JBoss, you need to define a logger in <filename>JBOSS_HOME/standalone/configuration/standalone-sip.xml</filename> and set it to <literal>DEBUG</literal>.</para>
	<example id="bsssc-Configuring_the_Stack_Logs_in_the_Container_standlaone-sip.xml">
                <title>Configuring the JAIN SIP Stack to log into the JBoss Container&apos;s logs</title>
                <programlisting linenumbering="unnumbered" role="XML"><![CDATA[
                        <logger category="gov.nist">
                		<level name="DEBUG"/>
            		</logger>]]>
                </programlisting>
        </example>
        <para>For this category to be used in &SHORT_PLATFORM_NAME;, you need to specify it in <filename>JBOSS_HOME/standalone/configuration/mss-sip-stack.properties</filename> or <filename>CATALINE_HOME/conf/mss-sip-stack.properties</filename>, add the <literal>gov.nist.javax.sip.LOG4J_LOGGER_NAME=gov.nist</literal> property, and set the <literal>gov.nist.javax.sip.TRACE_LEVEL=LOG4J</literal> property.</para>
  </section>


</section>
