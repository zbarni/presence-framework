<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "SIP_Servlets_Server_User_Guide.ent">
%BOOK_ENTITIES;
]>
<!-- chapter id nickname: ittsss --><chapter id="ittsss-Introduction_to_the_SIP_Servlets_Server">
  
<title>Introduction</title>

<section>

<title>Overview of &PLATFORM_NAME; SIP Servlets within the Telecommunications Industry</title>


<para>

The <ulink url="http://www.mobicents.org/"> Mobicents Communication Platform </ulink> is the best architecture to create, deploy and manage services and applications integrating voice, video and data across a range of IP and legacy communications networks. It drives convergence with the following key enablers:
</para>

<para>
            <figure>
              <title>Mobicents Architecture Overview</title>
              <mediaobject>
                <imageobject>
                  <imagedata width="700" fileref="images/mobicents_intro_architecture.png"/>
                </imageobject>
              </mediaobject>
            </figure>

</para>


<!--
<para>&PLATFORM_NAME; is the first and only open source <acronym>VoIP</acronym> platform certified for <acronym>JAIN SLEE</acronym> 1.0 and <acronym>SIP</acronym> Servlets 1.1 compliance.  &PLATFORM_NAME; serves as a high-performance core for Service Delivery Platforms (<acronym>SDP</acronym>s) and <acronym>IP</acronym> Multimedia Subsystems (<acronym>IMS</acronym>s) by leveraging <acronym>J2EE</acronym> to enable the convergence of data and video in Next-Generation Intelligent Network (<acronym>NGIN</acronym>) applications.</para>
		<para>The &PLATFORM_NAME; enables the composition of predefined Service Building Blocks (<acronym>SBB</acronym>s) such as Call-Control, Billing, User-Provisioning, Administration and Presence-Sensing.  Out-of-the-box monitoring and management of &PLATFORM_NAME; components is achieved through <acronym>JMX</acronym> Consoles. <acronym>JSLEE</acronym> allows popular protocol stacks such as <acronym>SIP</acronym> to be plugged in as Resource Adapters (<acronym>RA</acronym>s), and Service Building Blocks—which share many similarities with <acronym>EJB</acronym>s—allow the easy accommodation and integration of enterprise applications with end points such as the Web, Customer Relationship Management (<acronym>CRM</acronym>) systems and Service-Oriented Architectures (<acronym>SOA</acronym>s). The &PLATFORM_NAME; is the natural choice for telecommunication Operations Support Systems (OSSs) and Network Management Systems (NMSs).</para>
		<para>In addition to the telecommunication industry, the &PLATFORM_NAME; is suitable for a variety of problem domains demanding an Event-Driven Architecture (<acronym>EDA</acronym>) for high-volume, low-latency signaling, such as financial trading, online gaming, (<acronym>RFID</acronym>) sensor network integration, and distributed control.</para>



-->


</section>


<section>

<title>Overview of SIP Servlets Server</title>
 
<para>

&PLATFORM_NAME; SIP Servlets is a modern communications middleware platform. &PLATFORM_NAME; SIP Servlets facilitates the shift towards Cloud Communications by enabling deployment and autoscaling of real time SIP Servlets apps across all major IaaS (Infrastructure as a Service) providers and also brings realtime communications (voice and video) to your Browser using HTML5 <ulink url="http://www.webrtc.org/">WebRTC </ulink> and SIP Over WebSockets !

</para>
<para>
The <ulink url=" http://code.google.com/p/sipservlets/wiki/HTML5WebRTCVideoApplication"> &PLATFORM_NAME; HTML5 WebRTC Client </ulink>allows you to make video calls from and to any Web Browser supporting <ulink url="http://www.webrtc.org/">WebRTC </ulink> , (only Google Chrome supports it so far but all major browsers should support it in the next 6 months) as well as SIP Endpoints.
</para>
<para>
&PLATFORM_NAME; SIP Servlets enables turnkey SaaS offerings such as <ulink url="http://www.restcomm.org/"> RestComm </ulink>.
</para>
<para>
&PLATFORM_NAME; SIP Servlets implements the latest SIP Servlet v1.1 (JSR 289) standard. It can be plugged into any Application Server container (currently 7.X and JBoss 7.X) and also offers High Availability and Failover.
</para>
<para>
&PLATFORM_NAME; SIP Servlets is lead by <ulink url="http://www.telestax.com/">TeleStax, Inc </ulink>. and developed collaboratively by a community of individual and enterprise contributors. 

</para>


<para>
            <figure>
              <title>Mobicents WebRTC SIP Stack</title>
              <mediaobject>
                <imageobject>
                  <imagedata width="700" fileref="images/mss_webrtc_stack.png"/>
                </imageobject>
              </mediaobject>
            </figure>

</para>
</section>

<!--

 <para>
  &PLATFORM_NAME;
   SIP (Session Initiation Protocol) Servlets deliver a consistent, open platform on which to develop and deploy portable and distributed SIP and Java Enterprise Edition services. The &PLATFORM_NAME;
   SIP Servlets Server is a <emphasis>certified</emphasis> implementation of the SIP Servlet v1.1 (JSR 289) specification that can run on top of either the JBoss Application Server or the Tomcat Servlet Container.</para>
  <para>
  &PLATFORM_NAME;
   SIP Servlets for JBoss (&SHORT_PLATFORM_NAME; for JBoss) strives to develop interoperability standards between SIP Servlets and the Java Service Logic Execution Environment (JSLEE) so that applications can exploit the strengths of both. The JAIN-SIP Reference Implementation is leveraged as the SIP stack, and the &PLATFORM_NAME;
   JAIN SLEE Server is used as the SLEE implementation.</para>
  <itemizedlist id="ittsss-Principal_and_new_features_of_SIP_Servlets">
    <title>Features of the &PLATFORM_NAME; SIP Servlets Server</title>
    <listitem>
      <para>The first <emphasis>certified</emphasis> SIP Servlet v1.1 (JSR 289) implementation.</para>
    </listitem>
    <listitem>
      <para>Carrier grade performance.</para>
    </listitem>
    <listitem>
      <para>Load balancing, cluster and failover support.</para>
    </listitem>
    <listitem>
      <para>Converged SIP and HTTP session management.</para>
    </listitem>
    <listitem>
      <para>Media and Diameter support.</para>
    </listitem>
    <listitem>
      <para>A browser-based Management Console.</para>
    </listitem>
    <listitem>
      <para>A bundled JSLEE/SIP interoperability demonstration application for &SHORT_PLATFORM_NAME; for JBoss.</para>
    </listitem>
    <listitem>
      <para>&PLATFORM_NAME; Media Server.</para>
    </listitem>
    <listitem>
      <para>Extensions, including SUBSCRIBE/NOTIFY</para>
    </listitem>
  </itemizedlist>
-->

<!--
  <section id="ittsss-High-Availability-SIP_Servlets_Server_Load_Balancing_Clustering_and_Failover">
    <title>High-Availability: SIP Servlets Server Load Balancing, Clustering and Failover</title>
    <para>Telecommunications applications demand High-Availability (HA), fault tolerance, scalability and performance. Providing highly-available end-user applications that are tolerant of faults is commonly achieved through the use of clustering technologies.</para>
    <para>Clustering is a complex subject that is often used to collectively address a variety of techniques aimed at improving the high-availability and scalability of services and applications. Such techniques include distributed state replication, load balancing, and failover capabilities. The usage of any one of these techniques improves either reliability or performance, but at the expense of the other. It requires careful analysis of real-world scenarios to arrive at an architecture that represents the optimal balance of performance and reliability.</para>
    <para>Based on experience with production deployments and extensive feedback from the Open Source community, &PLATFORM_NAME; HA has undergone several iterations of refinement. In its current incarnation, the architecture can be described as a &quot;star topology&quot; with symmetric application servers and a smart, lightweight load-balancing element with built-in failover logic. The amount of state replication is kept to a minimum for maximum scalability with sufficiently-high reliability.</para>
    <figure>
      <title>A cluster of &PLATFORM_NAME; SIP Servlets Servers, showing the star network topology.</title>
      <mediaobject id="ittsss-sas-MSSSIPLoadBalancer-dia-StarNetworkTopology">
        <imageobject>
          <imagedata width="550" align="center" fileref="images/mss-MSSSIPLoadBalancer-dia-StarNetworkTopology.jpg" format="JPG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <formalpara id="ittsss-Clustering_Terms_and_Definitions_for_SIP_Servlets">
      <title>Clustering Terms and Definitions for &PLATFORM_NAME; SIP Servlets</title>
      <para>For purposes of clarity, the SIP Servlets High-Availability sections use terms like <emphasis>cluster</emphasis> with meanings specific to the context of &PLATFORM_NAME; SIP Servlets. Therefore, the following definitions are provided to clarify more precisely what is meant by the terms <emphasis>cluster</emphasis>, <emphasis>node</emphasis>, <emphasis>SIP Servlets Server</emphasis> and so on, in the subsequent sections, and in the context of &PLATFORM_NAME; High-Availability.</para>
    </formalpara>
    <important id="ittsss-Distinguishing_Between_a_Cluster_and_Clustering_Capabilities">
      <title>Distinguishing Between a Cluster and Clustering Capabilities</title>
      <para>The crux of possible confusion is this: any heterogeneous group of SIP Servlets Servers behind a SIP Load Balancer is, by definition, a <emphasis>cluster</emphasis>. Those SIP Servlets Servers can be either &SHORT_PLATFORM_NAME; for JBoss servers or &SHORT_PLATFORM_NAME; for Tomcat servers. However, a homogeneous group of &SHORT_PLATFORM_NAME; for JBoss servers served by a SIP Load Balancer, in addition to being a cluster, also possesses JBoss-specific <emphasis>clustering capabilities</emphasis>. Those clustering capabilities include, principally, state replication and the ability to fail over. Therefore, when specific <emphasis>clustering capabilities</emphasis> are spoken of, they are always referring to the context of a homogeneous cluster of &SHORT_PLATFORM_NAME; for JBoss server nodes served by a load balancer.</para>
    </important>
    <variablelist id="ittsss-Glossary_of_Cluster-Related_Terms">
      <title>Glossary of Cluster-Related Terms</title>
      <varlistentry>
        <term>SIP Servlets Server</term>
        <listitem>
          <para>A &PLATFORM_NAME; <emphasis>SIP Servlets Server</emphasis> refers to either a SIP Servlets-enabled JBoss Application Server (&SHORT_PLATFORM_NAME; for JBoss) or a SIP Servlets-enabled Tomcat Servlet Container (&SHORT_PLATFORM_NAME; for Tomcat). Anywhere the term SIP Servlets Server is used, you are free to substitute the JBoss or the Tomcat variety depending on the one you are interested in.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>node</term>
        <listitem>
          <para>A <emphasis>node</emphasis> is simply a SIP Servlets Server in a <emphasis>cluster</emphasis>. In this document, a node can be either an &SHORT_PLATFORM_NAME; for JBoss server or an &SHORT_PLATFORM_NAME; for Tomcat server.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>cluster</term>
        <listitem>
          <para>A <emphasis>cluster</emphasis>, as used in this document, refers simply to a group of one or more <emphasis>nodes</emphasis>, i.e. <emphasis>SIP Servlets Servers</emphasis>, behind a SIP Load Balancer. The minimum number of nodes in a cluster is one. The case of a <emphasis>cluster</emphasis> with one node almost always occurs in a <emphasis>degraded cluster</emphasis>: one in which other nodes, for some reason, have become unavailable.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>SIP Load Balancer</term>
        <listitem>
          <para>The <application>&PLATFORM_NAME; SIP Load Balancer</application> is not a full-fledged SIP Servlets Server itself. Rather, it is a simple <emphasis>proxy server</emphasis> whose primary purpose is to intelligently route SIP requests and replies between healthy and available SIP Servlets Servers residing in a <emphasis>cluster</emphasis> on a Local Area Network (LAN), and User Agents (UAs) accessing a SIP service or application from a Wide Area Network (WAN). The SIP Load Balancer therefore acts as a kind of gateway between a Wide Area Network with User Agents, and a Local Area Network wherein the SIP Servlets Server <emphasis>cluster nodes</emphasis> reside.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="concept-section-Working_with_the_SIP_Servlets_Management_Console.xml"/-->
</chapter>
